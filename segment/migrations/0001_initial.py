# Generated by Django 5.0.6 on 2024-05-19 22:05

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('community', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('nick_name', models.CharField(blank=True, max_length=255, null=True)),
                ('branch_initial', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Initials must be 1-7 characters long and contain only uppercase letters and numbers.', regex='^[A-Z0-9]{1,7}$')])),
                ('branch_address', models.CharField(max_length=255)),
                ('overview', models.TextField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='Enter a valid telephone number.', regex='^[+\\d][\\d]+$')])),
                ('mobile', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='Enter a valid Bangladeshi mobile number.', regex='^\\+880?\\d{10}$|^0\\d{10}$')])),
                ('location_iframe', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='segment.destination')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RoomCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('A', 'Active'), ('O', 'Out of order')], default='O', max_length=1)),
                ('overview', models.TextField()),
                ('adults', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('children', models.PositiveSmallIntegerField()),
                ('regular_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('discount_price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='segment.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=5)),
                ('status', models.CharField(choices=[('A', 'Active'), ('O', 'Out of order')], default='O', max_length=1)),
                ('room_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='segment.roomcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('mobile', models.CharField(max_length=14, validators=[django.core.validators.RegexValidator(message='Enter a valid Bangladeshi mobile number.', regex='^\\+880?\\d{10}$|^0\\d{10}$')])),
                ('status', models.CharField(choices=[('PN', 'Pending'), ('CN', 'Confirmed'), ('CO', 'Checked_out')], default='PN', max_length=2)),
                ('check_in', models.DateField()),
                ('check_out', models.DateField()),
                ('adults', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('children', models.PositiveSmallIntegerField()),
                ('additional_info', models.TextField()),
                ('guest_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='community.guest')),
                ('assigned_room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='segment.room')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='segment.roomcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='segment.booking')),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(1)])),
                ('quantity', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('discount', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(1)])),
                ('paid', models.DecimalField(decimal_places=2, max_digits=9, validators=[django.core.validators.MinValueValidator(1)])),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='segment.roomcategory')),
            ],
        ),
    ]
